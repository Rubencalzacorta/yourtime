{"ast":null,"code":"import { put, call, takeLatest } from \"redux-saga/effects\";\nimport { SEARCH_MOVIE_START, SEARCH_MOVIE_ERROR, SEARCH_MOVIE_COMPLETE } from \"../../consts/actionTypes\";\nimport { apiCall } from \"../api\";\nexport function* searchMovie({\n  payload\n}) {\n  try {\n    //with yield yo indicate the action to wait. \n    //use call to a method. the following arguement ts are the arguements that apicall receives. \n    const results = yield call(apiCall, null, null, null, \"GET\");\n    yield put({\n      type: SEARCH_MOVIE_COMPLETE,\n      results\n    });\n  } catch (error) {\n    yield put({\n      type: SEARCH_MOVIE_ERROR,\n      error\n    });\n  }\n}\nexport default function* search() {\n  yield takeLatest(SEARCH_MOVIE_START, searchMovie);\n}","map":{"version":3,"sources":["/home/rubencalzacorta/Desktop/personal_projects/hooks_redux_imdb/proyecto-react-hooks-redux-udemy/src/redux/sagas/search.js"],"names":["put","call","takeLatest","SEARCH_MOVIE_START","SEARCH_MOVIE_ERROR","SEARCH_MOVIE_COMPLETE","apiCall","searchMovie","payload","results","type","error","search"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,UAApB,QAAsC,oBAAtC;AAEA,SAASC,kBAAT,EAA6BC,kBAA7B,EAAiDC,qBAAjD,QAA8E,0BAA9E;AAEA,SAASC,OAAT,QAAwB,QAAxB;AAEA,OAAO,UAAUC,WAAV,CAAsB;AAAEC,EAAAA;AAAF,CAAtB,EAAmC;AACtC,MAAI;AAEA;AACA;AACA,UAAMC,OAAO,GAAG,MAAMR,IAAI,CAACK,OAAD,EAAU,IAAV,EAAgB,IAAhB,EAAsB,IAAtB,EAA4B,KAA5B,CAA1B;AACA,UAAMN,GAAG,CAAC;AAAEU,MAAAA,IAAI,EAAEL,qBAAR;AAA+BI,MAAAA;AAA/B,KAAD,CAAT;AAEH,GAPD,CAOE,OAAOE,KAAP,EAAc;AAEZ,UAAMX,GAAG,CAAC;AAAEU,MAAAA,IAAI,EAAEN,kBAAR;AAA4BO,MAAAA;AAA5B,KAAD,CAAT;AACH;AACJ;AAED,eAAe,UAAUC,MAAV,GAAmB;AAC9B,QAAMV,UAAU,CAACC,kBAAD,EAAqBI,WAArB,CAAhB;AACH","sourcesContent":["import { put, call, takeLatest } from \"redux-saga/effects\"\n\nimport { SEARCH_MOVIE_START, SEARCH_MOVIE_ERROR, SEARCH_MOVIE_COMPLETE } from \"../../consts/actionTypes\"\n\nimport { apiCall } from \"../api\"\n\nexport function* searchMovie({ payload }) {\n    try {\n\n        //with yield yo indicate the action to wait. \n        //use call to a method. the following arguement ts are the arguements that apicall receives. \n        const results = yield call(apiCall, null, null, null, \"GET\")\n        yield put({ type: SEARCH_MOVIE_COMPLETE, results })\n\n    } catch (error) {\n\n        yield put({ type: SEARCH_MOVIE_ERROR, error })\n    }\n}\n\nexport default function* search() {\n    yield takeLatest(SEARCH_MOVIE_START, searchMovie)\n}"]},"metadata":{},"sourceType":"module"}
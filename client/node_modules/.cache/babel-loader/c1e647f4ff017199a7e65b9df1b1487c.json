{"ast":null,"code":"var _jsxFileName = \"/home/rubencalzacorta/Desktop/personal_projects/hooks_redux_imdb/proyecto-react-hooks-redux-udemy/src/pages/Home/index.js\";\n//import useState to use hooks\nimport React, { useState } from \"react\";\nimport { Container, Typography, Card, Grid, TextField, Button } from \"@material-ui/core\";\nimport styles from \"./style\";\nimport { MovieIcon } from \"../../icons\";\nexport default (() => {\n  //inciamos el hook use state para usar estados dentro de componentes funcionales\n  //using object decontrustion we separate searchtext (the value of the state, in this case an empty string) and setSearchText (callback funcion used to set the new value of the state)\n  const [searchText, setSearchText] = useState(\"\");\n  const classes = styles();\n\n  const handleSearchTextChange = e => {\n    setSearchText(e.target.value);\n  };\n\n  const handleCleanTextClick = e => {\n    console.log(\"10\");\n  };\n\n  const handleSearchTextClick = e => {\n    console.log(\"10\");\n  };\n\n  return /*#__PURE__*/React.createElement(Container, {\n    className: classes.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: classes.cardContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    className: classes.titleGridContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, \"Bienvenido\")), /*#__PURE__*/React.createElement(Grid, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(MovieIcon, {\n    className: classes.movieIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }))), /*#__PURE__*/React.createElement(TextField, {\n    value: searchText,\n    placeholder: \"Buscar...\",\n    className: classes.textFieldSearch,\n    onChange: handleSearchTextChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    className: classes.buttonsContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    onClick: handleCleanTextClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 6\n    }\n  }, \"clean\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    className: classes.searchButton,\n    color: \"primary\",\n    onClick: handleSearchTextClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 6\n    }\n  }, \" search\"))));\n});","map":{"version":3,"sources":["/home/rubencalzacorta/Desktop/personal_projects/hooks_redux_imdb/proyecto-react-hooks-redux-udemy/src/pages/Home/index.js"],"names":["React","useState","Container","Typography","Card","Grid","TextField","Button","styles","MovieIcon","searchText","setSearchText","classes","handleSearchTextChange","e","target","value","handleCleanTextClick","console","log","handleSearchTextClick","container","cardContainer","titleGridContainer","title","movieIcon","textFieldSearch","buttonsContainer","searchButton"],"mappings":";AAAA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,SAASC,SAAT,EAAoBC,UAApB,EAAgCC,IAAhC,EAAsCC,IAAtC,EAA4CC,SAA5C,EAAuDC,MAAvD,QAAqE,mBAArE;AAEA,OAAOC,MAAP,MAAmB,SAAnB;AAEA,SAASC,SAAT,QAA0B,aAA1B;AAEA,gBAAe,MAAM;AAEpB;AACA;AACA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BV,QAAQ,CAAC,EAAD,CAA5C;AAEA,QAAMW,OAAO,GAAGJ,MAAM,EAAtB;;AAEA,QAAMK,sBAAsB,GAAGC,CAAC,IAAI;AACnCH,IAAAA,aAAa,CAACG,CAAC,CAACC,MAAF,CAASC,KAAV,CAAb;AACA,GAFD;;AAIA,QAAMC,oBAAoB,GAAGH,CAAC,IAAI;AACjCI,IAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACA,GAFD;;AAGA,QAAMC,qBAAqB,GAAGN,CAAC,IAAI;AAClCI,IAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACA,GAFD;;AAGA,sBACC,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAEP,OAAO,CAACS,SAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEC,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAET,OAAO,CAACU,aAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,SAAS,EAAEV,OAAO,CAACW,kBAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAEX,OAAO,CAACY,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADD,CADD,eAIC,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAEZ,OAAO,CAACa,SAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CAJD,CADD,eASC,oBAAC,SAAD;AACC,IAAA,KAAK,EAAEf,UADR;AAEC,IAAA,WAAW,EAAC,WAFb;AAGC,IAAA,SAAS,EAAEE,OAAO,CAACc,eAHpB;AAIC,IAAA,QAAQ,EAAEb,sBAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATD,eAeC,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAED,OAAO,CAACe,gBAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,WAAhB;AAA4B,IAAA,OAAO,EAAEV,oBAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADD,eAEC,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,WAAhB;AAA4B,IAAA,SAAS,EAAEL,OAAO,CAACgB,YAA/C;AAA6D,IAAA,KAAK,EAAC,SAAnE;AAA6E,IAAA,OAAO,EAAER,qBAAtF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFD,CAfD,CAFD,CADD;AA6BA,CA/CD","sourcesContent":["//import useState to use hooks\nimport React, { useState } from \"react\"\n\nimport { Container, Typography, Card, Grid, TextField, Button } from \"@material-ui/core\"\n\nimport styles from \"./style\"\n\nimport { MovieIcon } from \"../../icons\"\n\nexport default () => {\n\n\t//inciamos el hook use state para usar estados dentro de componentes funcionales\n\t//using object decontrustion we separate searchtext (the value of the state, in this case an empty string) and setSearchText (callback funcion used to set the new value of the state)\n\tconst [searchText, setSearchText] = useState(\"\")\n\n\tconst classes = styles()\n\n\tconst handleSearchTextChange = e => {\n\t\tsetSearchText(e.target.value)\n\t}\n\n\tconst handleCleanTextClick = e => {\n\t\tconsole.log(\"10\")\n\t}\n\tconst handleSearchTextClick = e => {\n\t\tconsole.log(\"10\")\n\t}\n\treturn (\n\t\t<Container className={classes.container}>\n\n\t\t\t<Card className={classes.cardContainer}>\n\t\t\t\t<Grid container className={classes.titleGridContainer} >\n\t\t\t\t\t<Grid>\n\t\t\t\t\t\t<Typography className={classes.title}>Bienvenido</Typography>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid>\n\t\t\t\t\t\t<MovieIcon className={classes.movieIcon} />\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t\t<TextField\n\t\t\t\t\tvalue={searchText}\n\t\t\t\t\tplaceholder=\"Buscar...\"\n\t\t\t\t\tclassName={classes.textFieldSearch}\n\t\t\t\t\tonChange={handleSearchTextChange}\n\t\t\t\t/>\n\t\t\t\t<Grid className={classes.buttonsContainer}>\n\t\t\t\t\t<Button variant=\"contained\" onClick={handleCleanTextClick} >clean</Button>\n\t\t\t\t\t<Button variant=\"contained\" className={classes.searchButton} color=\"primary\" onClick={handleSearchTextClick} > search</Button>\n\t\t\t\t</Grid>\n\n\t\t\t</Card>\n\n\t\t</Container>\n\n\n\t)\n}"]},"metadata":{},"sourceType":"module"}
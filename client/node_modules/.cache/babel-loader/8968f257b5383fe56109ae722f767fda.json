{"ast":null,"code":"var _jsxFileName = \"/home/rubencalzacorta/Desktop/personal_projects/yourtime/client/src/pages/MovieDetail/index.js\";\nimport React, { useEffect } from \"react\";\nimport { Container, CircularProgress, Typography } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { searchMovieById } from \"../../redux/actions/search\";\nimport { movieResult as movieResultSelector } from \"../../redux/selectors\"; //match pasa dentro de props en todos los componentes que son descendientes de una ruta\n\nexport default (({\n  match\n}) => {\n  const dispatch = useDispatch();\n  const movieResult = useSelector(state => movieResultSelector(state));\n  console.log(movieResult);\n  const movieId = match.params.id; //use effect funciona como el component did mount \n\n  useEffect(() => {\n    //si movie result no exite(osea que es la primera busqueda) o, si existe pero es distina al nuevo movieID (una segunda busqueda)\n    if (!movieResult || movieResult && movieResult.imdbID !== movieId) {\n      dispatch(searchMovieById({\n        movieId\n      }));\n    }\n  });\n\n  if (!movieResult) {\n    return /*#__PURE__*/React.createElement(CircularProgress, {\n      size: 50,\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 16\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, movieResult.Title), /*#__PURE__*/React.createElement(\"img\", {\n    src: movieResult.Poster,\n    alt: movieResult.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 25\n    }\n  }, \"Actors: \"), \" \", movieResult.Actors), /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 25\n    }\n  }, \"Director: \"), \" \", movieResult.Director), /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 25\n    }\n  }, \"Country: \"), \" \", movieResult.Country), /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 25\n    }\n  }, \"Rated: \"), \" \", movieResult.Rated), /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 25\n    }\n  }, \"Prices: \"), \" \", movieResult.Prices), /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 25\n    }\n  }, \"Plot: \"), \" \", movieResult.Plot));\n});","map":{"version":3,"sources":["/home/rubencalzacorta/Desktop/personal_projects/yourtime/client/src/pages/MovieDetail/index.js"],"names":["React","useEffect","Container","CircularProgress","Typography","useDispatch","useSelector","searchMovieById","movieResult","movieResultSelector","match","dispatch","state","console","log","movieId","params","id","imdbID","Title","Poster","title","Actors","Director","Country","Rated","Prices","Plot"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,SAASC,SAAT,EAAoBC,gBAApB,EAAsCC,UAAtC,QAAwD,mBAAxD;AAEA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,SAASC,eAAT,QAAgC,4BAAhC;AACA,SAASC,WAAW,IAAIC,mBAAxB,QAAmD,uBAAnD,C,CAEA;;AACA,gBAAe,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AAC1B,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AACA,QAAMG,WAAW,GAAGF,WAAW,CAACM,KAAK,IAAIH,mBAAmB,CAACG,KAAD,CAA7B,CAA/B;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYN,WAAZ;AAGA,QAAMO,OAAO,GAAGL,KAAK,CAACM,MAAN,CAAaC,EAA7B,CAP0B,CAQ1B;;AACAhB,EAAAA,SAAS,CAAC,MAAM;AAEZ;AACA,QAAI,CAACO,WAAD,IAAgBA,WAAW,IAAIA,WAAW,CAACU,MAAZ,KAAuBH,OAA1D,EAAmE;AAC/DJ,MAAAA,QAAQ,CAACJ,eAAe,CAAC;AAAEQ,QAAAA;AAAF,OAAD,CAAhB,CAAR;AACH;AAEJ,GAPQ,CAAT;;AASA,MAAI,CAACP,WAAL,EAAkB;AACd,wBAAO,oBAAC,gBAAD;AAAkB,MAAA,IAAI,EAAE,EAAxB;AAA4B,MAAA,KAAK,EAAC,SAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH;;AAED,sBACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0BA,WAAW,CAACW,KAAtC,CADJ,eAEI;AAAK,IAAA,GAAG,EAAEX,WAAW,CAACY,MAAtB;AAA8B,IAAA,GAAG,EAAEZ,WAAW,CAACa,KAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAGI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAZ,OAAuCb,WAAW,CAACc,MAAnD,CAHJ,eAII,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAZ,OAAyCd,WAAW,CAACe,QAArD,CAJJ,eAKI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAZ,OAAwCf,WAAW,CAACgB,OAApD,CALJ,eAMI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAZ,OAAsChB,WAAW,CAACiB,KAAlD,CANJ,eAOI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAZ,OAAuCjB,WAAW,CAACkB,MAAnD,CAPJ,eAQI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAZ,OAAqClB,WAAW,CAACmB,IAAjD,CARJ,CADJ;AAcH,CApCD","sourcesContent":["import React, { useEffect } from \"react\"\n\nimport { Container, CircularProgress, Typography } from \"@material-ui/core\"\n\nimport { useDispatch, useSelector } from \"react-redux\"\n\nimport { searchMovieById } from \"../../redux/actions/search\"\nimport { movieResult as movieResultSelector } from \"../../redux/selectors\"\n\n//match pasa dentro de props en todos los componentes que son descendientes de una ruta\nexport default ({ match }) => {\n    const dispatch = useDispatch()\n    const movieResult = useSelector(state => movieResultSelector(state))\n\n    console.log(movieResult)\n\n\n    const movieId = match.params.id\n    //use effect funciona como el component did mount \n    useEffect(() => {\n\n        //si movie result no exite(osea que es la primera busqueda) o, si existe pero es distina al nuevo movieID (una segunda busqueda)\n        if (!movieResult || movieResult && movieResult.imdbID !== movieId) {\n            dispatch(searchMovieById({ movieId }))\n        }\n\n    })\n\n    if (!movieResult) {\n        return <CircularProgress size={50} color=\"primary\" />\n    }\n\n    return (\n        <Container>\n            <Typography variant=\"h3\">{movieResult.Title}</Typography>\n            <img src={movieResult.Poster} alt={movieResult.title} />\n            <Typography><strong>Actors: </strong> {movieResult.Actors}</Typography>\n            <Typography><strong>Director: </strong> {movieResult.Director}</Typography>\n            <Typography><strong>Country: </strong> {movieResult.Country}</Typography>\n            <Typography><strong>Rated: </strong> {movieResult.Rated}</Typography>\n            <Typography><strong>Prices: </strong> {movieResult.Prices}</Typography>\n            <Typography><strong>Plot: </strong> {movieResult.Plot}</Typography>\n        </Container>\n\n    )\n\n}"]},"metadata":{},"sourceType":"module"}